class Solution {
public:
    int singleNonDuplicate(vector<int>& nums) {
        int n=nums.size();
        int st=0,end=n-1;
        if(n==1){
            return nums[0];
        }
        while(st<=end){
            int mid=st+(end-st)/2;
            if(mid==0 && nums[mid]!=nums[mid+1]){
                return nums[mid];
            }
            if(mid==n-2 && nums[mid]!=nums[mid-1]){
                return nums[mid];
            }
            if(nums[mid-1]!=nums[mid] && nums[mid+1]!=nums[mid]){
                return nums[mid];
            }else if(mid%2 ==0){
                if(nums[mid]==nums[mid-1]){
                    end=mid-1;
                }else{
                    st=mid+1;
                }
            }else{
                if(nums[mid]==nums[mid-1]){
                    st=mid+1;
                }else{
                    end=mid-1;
                }
            }
        }
        return -1
    }
};